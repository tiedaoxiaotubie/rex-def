import os
from collections import defaultdict
import importlib

import logging
l = logging.getLogger("rex.exploit.techniques")

from ..shellcode import Shellcode
# we don't use default shellcodes in rex
'''
from .linux_x86_binsh import LinuxX86Binsh
from .linux_amd64_binsh import LinuxAMD64Binsh
from .linux_arm_binsh import LinuxARMBinsh
from .x86_jmpsp import X86JmpSP
from .amd64_jmpsp import AMD64JmpSP
from .arm_jmpsp import ARMJmpSP
from .linux_x86_connectback import LinuxX86Connectback
from .linux_amd64_connectback import LinuxAMD64Connectback
from .x86_setregister import X86SetRegister
from .x86_leakaddress import X86LeakAddress
'''
#we use the shellcodes wrote by ourself instead!
from .defcc_shell_1 import DefccShell_1
from .defcc_shell_2 import DefccShell_2

Shellcodes = defaultdict(dict)
for s in Shellcode.__subclasses__():
    for os in s.supported_platforms:
        if not s.arch in Shellcodes[os]:
            Shellcodes[os][s.arch] = { }
        Shellcodes[os][s.arch][s.name] = s

Shellcodes = dict(Shellcodes)
